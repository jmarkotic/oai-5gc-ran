kubernetesType: Vanilla  #Vanilla for community kubernetes distribution else Openshift for Openshift

## In case of using these charts on Openshift then please use UBI images
## To know more about them follow this tutorial https://gitlab.eurecom.fr/oai/cn5g/oai-cn5g-fed/-/tree/master/openshift
nfimage:   # image name either locally present or in a public/private repository
  repository: harbor.lab.local/library/oai-gnb           ## dockerhub oaisoftwarealliance/oai-gnb  
  #version: 2023.w49
  #version: latest # image tag or develop
  version: v2.1.0 
  # pullPolicy: IfNotPresent or Never or Always
  pullPolicy: IfNotPresent 

## good to use when pulling images from docker-hub mention 
imagePullSecrets: 
  - name: "regcred"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "oai-cu-cp-sa"

## CU-CP can work with 1 virtual ip-address here we are using three different virtual interfaces. 
## In case you are using 1 ip-address for all 3 logical interfaces then please change it template/configmap.yaml
## Change these ip-addresses according to your environment

multus:
  # to remove the default gateway change it with ""
  defaultGateway: ""
  e1Interface:
    create: true 
    IPadd: "192.168.18.12"
    Netmask: "24"
    # #name inside the pod is hardcoded right now
    # name: "e1"
    # if gatway is empty then it will be removed
    #Gateway: ""
    routes: []
    hostInterface: "E1"      # Interface of the host machine on which this pod will be scheduled
  n2Interface:
    create: true 
    IPadd: "172.16.11.24"
    Netmask: "24"
    # #name inside the pod is hardcoded right now
    # name: "n2"
    # if gatway is empty then it will be removed
    #Gateway: ""
    routes: [] 
    hostInterface: "N2"      # Interface of the host machine on which this pod will be scheduled
  f1cInterface:
    create: true 
    IPadd: "172.16.13.24"
    Netmask: "24"
    # #name inside the pod is hardcoded right now
    # name: "f1c"
    # if gatway is empty then it will be removed
    #Gateway: ""
    routes: [] 
    hostInterface: "F1"      # Interface of the host machine on which this pod will be scheduled

## configuration file is in template/config.yaml 
## It is taken from https://gitlab.eurecom.fr/oai/openairinterface5g/-/blob/develop/ci-scripts/conf_files/gnb-cucp.sa.f1.conf
config:
  timeZone: "Europe/Paris"
  useAdditionalOptions: "--sa --log_config.global_log_options level,nocolor,time"
  cucpName: "oai-cu-cp"
  mcc: "001"   # check the information with AMF, SMF, UPF
  mnc: "01"    # check the information with AMF, SMF, UPF
  tac: "1"     # check the information with AMF
  sst: "1"  #currently only 4 standard values are allowed 1,2,3,4
  amfhost: "172.16.11.21"  # amf ip-address or service-name oai-amf-svc or 172.21.6.94
  n2IfName: "n2"    # if multus.n2Interface.create is true then use n2
  n3IfName: "n3"   #if multus.n3Interface.create is true then use n3 or you can only use 1 interface n2 or eth0 
  f1IfName: "f1"   #if multus.f1Interface.create is true then use f1
  e1IfName: "e1"   #if multus.f1Interface.create is true then use e1
  f1cuPort: "2152"   #2153 if using same interface for f1 and n3 else standard port 2152 should be use if f1 and n3 interface are different
  f1duPort: "2152"   #2153 if using same interface for f1 and n3 else standard port 2152 should be use if f1 and n3 interface are different
 
# Debugging section
podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

start:
  gnbcucp: true
  tcpdump: false

includeTcpDumpContainer: false #If true it will add a tcpdump container inside network function pod for debugging

## For openshift you can use rhel8/support-tools:8.7-13
tcpdumpimage:
   repository: docker.io/corfr/tcpdump
   version: latest
   #pullPolicy: IfNotPresent or Never or Always
   pullPolicy: IfNotPresent

## NF is the network function and tcpdump is the tcpdump container. 
## To know more about request and limit it is better to understand that how Kubernetes QoS works. 
## https://kubernetes.io/docs/concepts/configuration/manage-resources-containers
## https://kubernetes.io/docs/concepts/workloads/pods/pod-qos
resources:
  define: false
  limits:
    nf:
      cpu: 100m
      memory: 128Mi
    #If tcpdump container is disabled this value will not be used
    tcpdump:
      cpu: 100m
      memory: 128Mi
  requests:
    nf:
      cpu: 100m
      memory: 128Mi
    #If tcpdump container is disabled this value will not be used
    tcpdump:
      cpu: 100m
      memory: 128Mi


tolerations: []

affinity: {}

terminationGracePeriodSeconds: 5

nodeSelector: { "workload": "cucp" }

nodeName: 
